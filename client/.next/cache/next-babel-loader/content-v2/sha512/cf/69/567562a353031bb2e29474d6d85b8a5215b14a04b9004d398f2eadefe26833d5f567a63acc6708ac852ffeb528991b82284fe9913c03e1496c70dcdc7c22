{"ast":null,"code":"import axios from 'axios';\n\nconst buildClient = ({\n  req\n}) => {\n  if (true) {\n    // we are on server\n    return axios.create({\n      baseUrl: 'http://SERVICE_NAME.NAMESPACE.svc.cluster.local',\n      headers: req.headers\n    });\n  } else {\n    // we are on browser\n    return axios.create({\n      baseUrl: '/'\n    });\n  }\n};\n\nexport default buildClient;","map":{"version":3,"sources":["E:/Codes/Microservices/Ticketing/client/api/buildClient.js"],"names":["axios","buildClient","req","create","baseUrl","headers"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAa;AAChC,YAAmC;AAClC;AACA,WAAOF,KAAK,CAACG,MAAN,CAAa;AACnBC,MAAAA,OAAO,EAAE,iDADU;AAEnBC,MAAAA,OAAO,EAAEH,GAAG,CAACG;AAFM,KAAb,CAAP;AAIA,GAND,MAMO;AACN;AACA,WAAOL,KAAK,CAACG,MAAN,CAAa;AACnBC,MAAAA,OAAO,EAAE;AADU,KAAb,CAAP;AAGA;AACD,CAbD;;AAeA,eAAeH,WAAf","sourcesContent":["import axios from 'axios';\r\n\r\nconst buildClient = ({ req }) => {\r\n\tif (typeof window === 'undefined') {\r\n\t\t// we are on server\r\n\t\treturn axios.create({\r\n\t\t\tbaseUrl: 'http://SERVICE_NAME.NAMESPACE.svc.cluster.local',\r\n\t\t\theaders: req.headers,\r\n\t\t});\r\n\t} else {\r\n\t\t// we are on browser\r\n\t\treturn axios.create({\r\n\t\t\tbaseUrl: '/',\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport default buildClient;\r\n"]},"metadata":{},"sourceType":"module"}